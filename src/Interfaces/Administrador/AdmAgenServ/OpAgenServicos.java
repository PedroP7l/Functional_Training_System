/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.Administrador.AdmAgenServ;

import java.sql.Date;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import objetos.Agendamento;
import objetos.Aluno;
import objetos_dao.AgendamentoDAO;
import objetos_dao.AlunoDAO;

/**
 *
 * @author Marco Antônio
 */
public class OpAgenServicos extends javax.swing.JPanel {

    AgendamentoDAO agendamentoBanco = new AgendamentoDAO();    
    public static Agendamento tempAgenda = new Agendamento();
    public static int indice = -1;
    
    String[] modelHora = new String[] {    "08:00", "08:30", "09:00", "09:30", 
                                            "10:00", "10:30", "11:00", "11:30", "13:00", 
                                            "13:30", "14:00", "14:30", "15:00", "15:30", 
                                            "16:00", "16:30", "18:00", "18:30", "19:00", 
                                            "19:30", "20:00", "20:30", "21:00", "21:30" };
    
    String selecionadoHora = null;
    public OpAgenServicos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Titulo = new javax.swing.JLabel();
        TelaFunc = new javax.swing.JTabbedPane();
        AbaAgenServ = new javax.swing.JPanel();
        NomeAgenServ = new javax.swing.JLabel();
        NomeSolicitador = new javax.swing.JLabel();
        ObjAgenServ = new javax.swing.JLabel();
        HoraAgenServ = new javax.swing.JLabel();
        CpfDestAgenServ = new javax.swing.JLabel();
        CPFSolicitador = new javax.swing.JLabel();
        horaServico = new javax.swing.JLabel();
        DescricaoServico = new javax.swing.JLabel();
        AbaCadAgenServ = new javax.swing.JPanel();
        NomeCadAgenServ = new javax.swing.JLabel();
        comboSolicitadorCadServico = new javax.swing.JComboBox<>();
        NomeCadAgenServ1 = new javax.swing.JLabel();
        comboHoraCadServico = new javax.swing.JComboBox<>();
        NomeCadAgenServ2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descricaoCadServico = new javax.swing.JTextArea();
        calendarioCadServico = new com.toedter.calendar.JCalendar();
        CadastrarAgenServ = new javax.swing.JButton();
        EditarAgenServ = new javax.swing.JButton();
        ExcluirAgenServ = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        calendarioProcuraServico = new com.toedter.calendar.JCalendar();
        btnProcurar = new javax.swing.JButton();
        TabelaPesquisaAgenServ = new javax.swing.JPanel();
        PesquisarAgenServ = new javax.swing.JButton();
        pesquisarAgenServ = new javax.swing.JTextField();
        ScrollTabelaAgenServ = new javax.swing.JScrollPane();
        TabelaServico = new javax.swing.JTable();
        btnLimpar = new javax.swing.JButton();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        Titulo.setFont(new java.awt.Font("Impact", 0, 30)); // NOI18N
        Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titulo.setText("Gerenciar agenda de serviços");

        TelaFunc.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        AbaAgenServ.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        NomeAgenServ.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        NomeAgenServ.setText("Solicitador:");

        NomeSolicitador.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        ObjAgenServ.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        ObjAgenServ.setText("Descrição:");

        HoraAgenServ.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        HoraAgenServ.setText("Data e hora:");

        CpfDestAgenServ.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        CpfDestAgenServ.setText("CPF:");

        CPFSolicitador.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        horaServico.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        DescricaoServico.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        javax.swing.GroupLayout AbaAgenServLayout = new javax.swing.GroupLayout(AbaAgenServ);
        AbaAgenServ.setLayout(AbaAgenServLayout);
        AbaAgenServLayout.setHorizontalGroup(
            AbaAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaAgenServLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(AbaAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AbaAgenServLayout.createSequentialGroup()
                        .addComponent(NomeAgenServ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NomeSolicitador, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CpfDestAgenServ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CPFSolicitador, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DescricaoServico, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AbaAgenServLayout.createSequentialGroup()
                        .addComponent(HoraAgenServ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(horaServico, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ObjAgenServ))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        AbaAgenServLayout.setVerticalGroup(
            AbaAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaAgenServLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(AbaAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NomeSolicitador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(AbaAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NomeAgenServ)
                        .addComponent(CpfDestAgenServ)
                        .addComponent(CPFSolicitador, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(AbaAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HoraAgenServ)
                    .addComponent(horaServico, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(ObjAgenServ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DescricaoServico, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        TelaFunc.addTab("Serviços", AbaAgenServ);

        AbaCadAgenServ.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        NomeCadAgenServ.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        NomeCadAgenServ.setText("Solicitador:");

        comboSolicitadorCadServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboSolicitadorCadServicoMouseClicked(evt);
            }
        });

        NomeCadAgenServ1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        NomeCadAgenServ1.setText("Horário:");

        comboHoraCadServico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8:00", "8:30", "9:00", "9:30", "10:00", "10:30", "11:00", "11:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30" }));

        NomeCadAgenServ2.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        NomeCadAgenServ2.setText("Descrição:");

        descricaoCadServico.setColumns(20);
        descricaoCadServico.setRows(5);
        descricaoCadServico.setWrapStyleWord(true);
        descricaoCadServico.setLineWrap(true);
        jScrollPane1.setViewportView(descricaoCadServico);

        calendarioCadServico.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        calendarioCadServico.setMinSelectableDate(new java.util.Date());
        calendarioCadServico.setWeekOfYearVisible(false);
        calendarioCadServico.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calendarioCadServicoPropertyChange(evt);
            }
        });

        CadastrarAgenServ.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        CadastrarAgenServ.setText("Cadastrar");
        CadastrarAgenServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarAgenServActionPerformed(evt);
            }
        });

        EditarAgenServ.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        EditarAgenServ.setText("Editar");
        EditarAgenServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarAgenServActionPerformed(evt);
            }
        });

        ExcluirAgenServ.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        ExcluirAgenServ.setText("Excluir");
        ExcluirAgenServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirAgenServActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AbaCadAgenServLayout = new javax.swing.GroupLayout(AbaCadAgenServ);
        AbaCadAgenServ.setLayout(AbaCadAgenServLayout);
        AbaCadAgenServLayout.setHorizontalGroup(
            AbaCadAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaCadAgenServLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AbaCadAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NomeCadAgenServ2)
                    .addComponent(NomeCadAgenServ1)
                    .addComponent(NomeCadAgenServ))
                .addGap(18, 18, 18)
                .addGroup(AbaCadAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboSolicitadorCadServico, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboHoraCadServico, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(calendarioCadServico, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AbaCadAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExcluirAgenServ, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CadastrarAgenServ, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(EditarAgenServ, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        AbaCadAgenServLayout.setVerticalGroup(
            AbaCadAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AbaCadAgenServLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(CadastrarAgenServ)
                .addGap(36, 36, 36)
                .addComponent(EditarAgenServ)
                .addGap(35, 35, 35)
                .addComponent(ExcluirAgenServ)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AbaCadAgenServLayout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addGroup(AbaCadAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AbaCadAgenServLayout.createSequentialGroup()
                        .addGroup(AbaCadAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(NomeCadAgenServ)
                            .addComponent(comboSolicitadorCadServico, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AbaCadAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboHoraCadServico, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NomeCadAgenServ1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AbaCadAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NomeCadAgenServ2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(calendarioCadServico, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        TelaFunc.addTab("Controle", AbaCadAgenServ);

        calendarioProcuraServico.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        calendarioProcuraServico.setMinSelectableDate(new java.util.Date());
        calendarioProcuraServico.setWeekOfYearVisible(false);

        btnProcurar.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnProcurar.setText("Procurar");
        btnProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(calendarioProcuraServico, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(btnProcurar)
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnProcurar)
                .addGap(113, 113, 113))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(calendarioProcuraServico, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
        );

        TelaFunc.addTab("Calendário", jPanel1);

        TabelaPesquisaAgenServ.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        PesquisarAgenServ.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        PesquisarAgenServ.setText("Pesquisar");
        PesquisarAgenServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PesquisarAgenServActionPerformed(evt);
            }
        });

        pesquisarAgenServ.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        pesquisarAgenServ.setPreferredSize(new java.awt.Dimension(74, 32));

        TabelaServico.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        TabelaServico.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        TabelaServico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Serviço", "Data e hora", "Solicitador", "CPF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaServico.setToolTipText("");
        TabelaServico.setAlignmentX(1.0F);
        TabelaServico.setAlignmentY(1.0F);
        TabelaServico.setRowHeight(28);
        TabelaServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaServicoMouseClicked(evt);
            }
        });
        ScrollTabelaAgenServ.setViewportView(TabelaServico);

        btnLimpar.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TabelaPesquisaAgenServLayout = new javax.swing.GroupLayout(TabelaPesquisaAgenServ);
        TabelaPesquisaAgenServ.setLayout(TabelaPesquisaAgenServLayout);
        TabelaPesquisaAgenServLayout.setHorizontalGroup(
            TabelaPesquisaAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelaPesquisaAgenServLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PesquisarAgenServ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pesquisarAgenServ, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLimpar)
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TabelaPesquisaAgenServLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ScrollTabelaAgenServ, javax.swing.GroupLayout.PREFERRED_SIZE, 894, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        TabelaPesquisaAgenServLayout.setVerticalGroup(
            TabelaPesquisaAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelaPesquisaAgenServLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TabelaPesquisaAgenServLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PesquisarAgenServ)
                    .addComponent(pesquisarAgenServ, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ScrollTabelaAgenServ, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TelaFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TabelaPesquisaAgenServ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 100, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TelaFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabelaPesquisaAgenServ, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboSolicitadorCadServicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboSolicitadorCadServicoMouseClicked
        //         if(comboSolicitadorCadServico.getSelectedItem() != null)
        //            System.out.println(comboSolicitadorCadServico.getSelectedItem().toString().split("\\|")[1]);
    }//GEN-LAST:event_comboSolicitadorCadServicoMouseClicked

    private void calendarioCadServicoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calendarioCadServicoPropertyChange

        try {
            comboHoraCadServico.setModel(new DefaultComboBoxModel<>(modelHora));
            
            for(String s : agendamentoBanco.getHorarios(new Date(calendarioCadServico.getDate().getTime()))){
                
                //            System.out.println(s + " "+ selecionadoHora);
                if(!s.equals(selecionadoHora)){
                    
                    comboHoraCadServico.removeItem(s);
                }
            }
            
            comboHoraCadServico.setSelectedItem(selecionadoHora);
            selecionadoHora = null;
        } catch (Exception ex) {
            Logger.getLogger(OpAgenServicos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_calendarioCadServicoPropertyChange

    private void CadastrarAgenServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarAgenServActionPerformed

        try {

            boolean i = true;
            Agendamento tempAgend = new Agendamento();

            if( comboSolicitadorCadServico.getSelectedItem() == null ||
                comboHoraCadServico.getSelectedItem() == null ||
                descricaoCadServico.getText().isBlank() ||
                calendarioCadServico.getDate() == null)
                throw new Exception();

            tempAgend.setAluno(new AlunoDAO().getAluno(((Aluno)comboSolicitadorCadServico.getSelectedItem()).getCPF()));

            LocalTime t = LocalTime.parse(comboHoraCadServico.getSelectedItem().toString());
            Calendar cal = Calendar.getInstance();
            cal.setTimeInMillis(calendarioCadServico.getDate().getTime());
            cal.set(Calendar.HOUR_OF_DAY, t.getHour());
            cal.set(Calendar.MINUTE, t.getMinute());
            cal.set(Calendar.SECOND, t.getSecond());
            cal.set(Calendar.MILLISECOND, t.getNano());

            tempAgend.setData_hora(new Timestamp(cal.getTimeInMillis()));
            tempAgend.setDescricao(descricaoCadServico.getText());

            agendamentoBanco.adiciona(tempAgend);

            JOptionPane.showMessageDialog(null, "Serviço agendado com sucesso!");
            Limpar();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Preencha Todos os Campos Corretamente!!!");
            System.err.print(e);
        }
    }//GEN-LAST:event_CadastrarAgenServActionPerformed

    private void EditarAgenServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarAgenServActionPerformed
        try {

            boolean i = true;
            Agendamento agenda = new Agendamento();

            if(indice >= 0){
                if( comboSolicitadorCadServico.getSelectedItem() == null ||
                    comboHoraCadServico.getSelectedItem() == null ||
                    descricaoCadServico.getText().isBlank() ||
                    calendarioCadServico.getDate() == null)
                    throw new Exception();

                agenda.setAluno(new AlunoDAO().getAluno(((Aluno)comboSolicitadorCadServico.getSelectedItem()).getCPF()));

                LocalTime t = LocalTime.parse(comboHoraCadServico.getSelectedItem().toString());
                Calendar cal = Calendar.getInstance();
                cal.setTimeInMillis(calendarioCadServico.getDate().getTime());
                cal.set(Calendar.HOUR_OF_DAY, t.getHour());
                cal.set(Calendar.MINUTE, t.getMinute());
                cal.set(Calendar.SECOND, t.getSecond());
                cal.set(Calendar.MILLISECOND, t.getNano());

                agenda.setData_hora(new Timestamp(cal.getTimeInMillis()));
                agenda.setDescricao(descricaoCadServico.getText());

                EditAgenServAlerta EAA = new EditAgenServAlerta(tempAgenda, agenda, this);
                EAA.setVisible(true);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Preencha Todos os Campos Corretamente!!!");
            System.err.print(e);
        }
    }//GEN-LAST:event_EditarAgenServActionPerformed

    private void ExcluirAgenServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirAgenServActionPerformed
        indice = TabelaServico.getSelectedRow();

        try{
//            if (indice >= 0) {
//                
//            }

            ExcAgenServAlerta EAA = new ExcAgenServAlerta(tempAgenda, this);
            EAA.setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione um agendamento válido na tabela!!!");
            indice = -1;
        }
    }//GEN-LAST:event_ExcluirAgenServActionPerformed

    private void btnProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarActionPerformed
        try {
            DefaultTableModel TF = (DefaultTableModel) TabelaServico.getModel();
            TF.setNumRows(0);
            
            ArrayList<Agendamento> agendamentos = new AgendamentoDAO().getAgendamentos(new Date(calendarioProcuraServico.getDate().getTime()));
            
            for(Agendamento a : agendamentos){
                if(a.getData_hora().after(new java.util.Date()))
                    TF.addRow(new Object[]{
                        a.getDescricao(),
                        new SimpleDateFormat("dd/MM/yyyy  HH:mm:ss").format(a.getData_hora()),
                        a.getAluno().getNome(),
                        a.getAluno().getCPF()
                            ,});
            }
        } catch (Exception ex) {
            Logger.getLogger(OpAgenServicos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnProcurarActionPerformed

    private void PesquisarAgenServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PesquisarAgenServActionPerformed
        try {
            DefaultTableModel TF = (DefaultTableModel) TabelaServico.getModel();
            TF.setNumRows(0);
            
            ArrayList<Agendamento> agendamentos = new AgendamentoDAO().getLista();
            
            for(Agendamento a : agendamentos){
                if(a.getData_hora().after(new java.util.Date()) && (a.getAluno().getNome().contains(pesquisarAgenServ.getText()) || a.getAluno().getCPF().contains(pesquisarAgenServ.getText())))
                    TF.addRow(new Object[]{
                        a.getDescricao(),
                        new SimpleDateFormat("dd/MM/yyyy  HH:mm:ss").format(a.getData_hora()),
                        a.getAluno().getNome(),
                        a.getAluno().getCPF()
                            ,});
            }
        } catch (Exception ex) {
            Logger.getLogger(OpAgenServicos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PesquisarAgenServActionPerformed

    private void TabelaServicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaServicoMouseClicked
        indice = TabelaServico.getSelectedRow();

        try{
            String CPF = TabelaServico.getValueAt(indice, 3).toString();
            java.util.Date date = new SimpleDateFormat("dd/MM/yyyy  HH:mm:ss").parse(TabelaServico.getValueAt(indice, 1).toString());
            Timestamp datahora = new Timestamp(date.getTime());

            Agendamento agendamento = agendamentoBanco.getAgendamento(CPF, datahora); 

            if(indice >= 0 && agendamento != null){
                tempAgenda = agendamento;

                NomeSolicitador.setText(agendamento.getAluno().getNome());
                CPFSolicitador.setText(agendamento.getAluno().getCPF());
                horaServico.setText(new SimpleDateFormat("dd/MM/yyyy  HH:mm:ss").format(agendamento.getData_hora()));
                DescricaoServico.setText(agendamento.getDescricao());

                comboHoraCadServico.setModel(new DefaultComboBoxModel<>(modelHora));

                comboSolicitadorCadServico.setSelectedItem(agendamento.getAluno());
                selecionadoHora = new SimpleDateFormat("HH:mm").format(new Date(agendamento.getData_hora().getTime()));
                comboHoraCadServico.setSelectedItem(selecionadoHora);
                descricaoCadServico.setText(agendamento.getDescricao());
                calendarioCadServico.setDate(new java.util.Date(agendamento.getData_hora().getTime()));

                CadastrarAgenServ.setEnabled(false);
                EditarAgenServ.setEnabled(true);
                ExcluirAgenServ.setEnabled(true);

            }else {

                JOptionPane.showMessageDialog(null, "Selecione um agendamento de serviço na Tabela!!!");
                indice = -1;
            }
        }catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Selecione um funcionário válido!!!");
            indice = -1;
        }

    }//GEN-LAST:event_TabelaServicoMouseClicked

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        Limpar();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        AtualizaTabela();
        
        try {
            comboSolicitadorCadServico.addItem(null);
            for(Aluno a : new AlunoDAO().getLista()){
                comboSolicitadorCadServico.addItem(a);
            }
        } catch (Exception ex) {
            Logger.getLogger(OpAgenServicos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formAncestorAdded

    
    public void AtualizaTabela() {

        try {
            DefaultTableModel TF = (DefaultTableModel) TabelaServico.getModel();
            TF.setNumRows(0);
            
            ArrayList<Agendamento> agendamentos = new AgendamentoDAO().getLista();
            
            for(Agendamento a : agendamentos){
                if(a.getData_hora().after(new java.util.Date()))
                    TF.addRow(new Object[]{
                        a.getDescricao(),
                        new SimpleDateFormat("dd/MM/yyyy  HH:mm:ss").format(a.getData_hora()),
                        a.getAluno().getNome(),
                        a.getAluno().getCPF()
                            ,});
            }
        } catch (Exception ex) {
            Logger.getLogger(OpAgenServicos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void Limpar(){
        
        NomeSolicitador.setText("");
        CPFSolicitador.setText("");
        horaServico.setText("");
        DescricaoServico.setText("");

        comboHoraCadServico.setModel(new DefaultComboBoxModel<>(modelHora));
        
        selecionadoHora = null;
        comboSolicitadorCadServico.setSelectedItem(null);
        comboHoraCadServico.setSelectedItem(null);
        descricaoCadServico.setText("");
        calendarioCadServico.setDate(new java.util.Date());

        comboHoraCadServico.setEnabled(true);
        CadastrarAgenServ.setEnabled(true);
        EditarAgenServ.setEnabled(false);
        ExcluirAgenServ.setEnabled(false);
        
        AtualizaTabela();
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AbaAgenServ;
    private javax.swing.JPanel AbaCadAgenServ;
    private javax.swing.JLabel CPFSolicitador;
    private javax.swing.JButton CadastrarAgenServ;
    private javax.swing.JLabel CpfDestAgenServ;
    private javax.swing.JLabel DescricaoServico;
    private javax.swing.JButton EditarAgenServ;
    private javax.swing.JButton ExcluirAgenServ;
    private javax.swing.JLabel HoraAgenServ;
    private javax.swing.JLabel NomeAgenServ;
    private javax.swing.JLabel NomeCadAgenServ;
    private javax.swing.JLabel NomeCadAgenServ1;
    private javax.swing.JLabel NomeCadAgenServ2;
    private javax.swing.JLabel NomeSolicitador;
    private javax.swing.JLabel ObjAgenServ;
    private javax.swing.JButton PesquisarAgenServ;
    private javax.swing.JScrollPane ScrollTabelaAgenServ;
    private javax.swing.JPanel TabelaPesquisaAgenServ;
    private javax.swing.JTable TabelaServico;
    private javax.swing.JTabbedPane TelaFunc;
    private javax.swing.JLabel Titulo;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnProcurar;
    private com.toedter.calendar.JCalendar calendarioCadServico;
    private com.toedter.calendar.JCalendar calendarioProcuraServico;
    private javax.swing.JComboBox<String> comboHoraCadServico;
    private javax.swing.JComboBox<Aluno> comboSolicitadorCadServico;
    private javax.swing.JTextArea descricaoCadServico;
    private javax.swing.JLabel horaServico;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pesquisarAgenServ;
    // End of variables declaration//GEN-END:variables
}
